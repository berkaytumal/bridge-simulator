@import url(https://fonts.googleapis.com/css?family=JetBrains%20Mono);
@import url(https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.css);
:root {
  --accent: #0d72ff;
  --accent-dark: rgb(30, 52, 101);
  @media (prefers-color-scheme: light) {
    & {
      --accent-dark: #0d72ff;

      --accent: #8dbdff;
    }
  }
  --jumpanim: cubic-bezier(0.33, 1.27, 0.41, 1);
  --jump2anim: cubic-bezier(0.3, 2, 0.4, 1);
  --jump3anim: cubic-bezier(0.3, 1.5, 0.5, 1);
}

@mixin prefix($property, $value) {
  -webkit-#{$property}: $value;
  #{$property}: $value; // Standard property declaration
  -moz-#{$property}: $value; // Standard property declaration
}
* {
  &:not(code) {
    @include prefix(user-drag, none);
    @include prefix(user-select, none);
  }
  cursor: default;
  font-family: JetBrains Mono;
  outline: none;
}
html,
body {
  color-scheme: light dark;
  overflow: hidden;
  position: fixed;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  padding: 0px;
  margin: 0px;
  touch-action: none;
}

body {
  padding: 20px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  #menubar {
    height: 40px;
    background: rgb(127, 127, 127, 0.1);
    @include prefix(backdrop-filter, blur(20px));
    border-bottom: solid 1px rgb(127, 127, 127, 0.25);
    display: flex;
    align-items: center;
    p:nth-child(1) {
      padding-left: 40px;
    }
    p {
      position: relative;
      transition: 0.5s background;
      &::before {
        transition: 0.5s;
        position: absolute;
        content: "";
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        background-color: var(--accent);
        z-index: -1;
        opacity: 0;
        box-shadow: 0px 0px 50px 20px var(--accent);
      }
      &:active,
      &.active {
        &::before {
          transition: 0s;
          box-shadow: 0px 0px 10px -10px white;
          opacity: 0.5;
        }
      }
      align-items: center;
      img {
        left: 7.5px;
        top: 7.5px;

        align-items: center;
        position: absolute;
        height: 25px;
      }
      margin: 0px;
      padding: 10px;
    }
  }
  .context-menu-list {
    @include prefix(backdrop-filter, contrast(1.25) blur(20px));
    position: absolute;
    background: rgb(127, 127, 127, 0.1);
    border: solid 1px rgb(127, 127, 127, 0.2);
  }
}

.context-menu-item {
  * {
    color: windowtext;
  }
  background: transparent !important;
}
.context-menu-icon::before {
  color: var(--accent);
}
.context-menu-separator {
  border-bottom: solid 1px rgb(127, 127, 127, 0.25) !important;
}

#nonchrome {
  position: absolute;
  bottom: 0px;
  visibility: hidden;
  color: windowtext;

  padding-bottom: 20px;
  h1 {
    margin: 0px;
    color: red;
    --accent-dark: rgb(100, 0, 0);
    @media (prefers-color-scheme: light) {
      & {
        color: rgb(255, 156, 156);
        --accent-dark: red;
      }
    }
  }
}

.context {
  display: inline-block;
  position: fixed;
  top: 0px;
  left: 0px;
  min-width: 270px;
  color: windowtext;
  @include prefix(backdrop-filter, contrast(1.1) blur(20px));
  border: solid 1px rgb(127, 127, 127, 0.2);

  background: rgb(127, 127, 127, 0.1);
  padding: 0px;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  .item {
    padding: 4px 19px;
    cursor: default;
    color: inherit;
    &:hover {
      background: rgb(127, 127, 127, 0.3);
    }
    .hotkey {
      color: rgb(127, 127, 127);
    }
  }
  .disabled {
    color: #878b90;
    .hotkey {
      color: rgb(127, 127, 127, 0.5);
    }
    &:hover {
      background: transparent;
    }
  }
  .separator {
    margin: 4px 0px;
    height: 0;
    padding: 0;
    border-top: solid 1px rgb(127, 127, 127, 0.2);
  }
}

.label {
}

.hotkey {
  color: #878b90;
  float: right;
}

.menu {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  border: solid 1px rgb(127, 127, 127, 0.2);
  list-style: none;
  list-style-type: none;
  min-width: max-content;
  outline: none;
  animation: scale-in 250ms ease-in-out;
  transform-origin: 0px 0px;
  max-height: 100vh;
  max-width: 100vw;
  min-width: 16rem;
  overflow: visible;

  &:before {
    position: absolute;
    left: 0px;
    width: 100%;
    top: 0px;
    height: 100%;
    content: "";
    z-index: -1;
    @include prefix(backdrop-filter, contrast(0.95) blur(20px) !important);
  }
}
@keyframes scale-in {
  from {
    transform: scale(0);
  }

  to {
    transform: scale(1);
  }
}
@keyframes scale-out {
  to {
    transform: scale(0);
  }

  from {
    transform: scale(1);
  }
}

.context-menu {
  position: fixed;
  left: 0;
  top: 0;
  z-index: 99999;
}

.menu .menu {
  display: none;
  position: absolute;
  left: 100%;
  top: -3px;
  border: solid 1px rgb(127, 127, 127, 0.2);
}

.menu hr {
  appearance: none;
  border: none;
  border-top: 1px solid rgb(127, 127, 127, 0.2);
}

.menu-item {
  position: relative;
  padding: 4px;
  margin-block-start: 2px;
  margin-block-end: 2px;
  padding-inline-start: calc(1.5em + 6px);
  padding-inline-end: calc(1.5em + 6px);
  outline: none;
}

.menu-item.header {
  font-weight: 700;
  padding: 6px;
}

.menu-item.disabled {
  color: gray;
  pointer-events: none;
}

.menu-item::before {
  content: "";
  position: absolute;
  left: 2px;
  top: 0;
  height: 100%;
  background-image: var(--icon);
  background-size: 1em 1em;
  background-position: center;
  vertical-align: middle;
  text-align: center;
}

.menu-item:has(.menu)::after {
  content: "â–¶";
  position: absolute;
  right: 6px;
}

.menu-item:is(:hover, :focus-within) > .menu {
  display: block;
}

.menu > .menu-item:is(:hover, :focus-within):not(.disabled, .header) {
  background-color: var(--accent);
}

.menu-shortcut {
  float: right;
  opacity: 0.7;
}
p {
  opacity: 0.8;
}

@mixin pixtoshadow($px, $num) {
  $shadows: ();
  @for $i from 1 through $num {
    $shadows: append($shadows, #{$i}px #{$i}px 0px var(--accent-dark), comma);
  }
  text-shadow: $shadows;
}
h1,
h2,
h3,
h4 {
  @include pixtoshadow(1px, 5);
  color: var(--accent);
}
html.page,
html.page body {
  width: 800px;
  height: 500px;

  background: transparent;
  box-shadow: 0px 0px 0px 1000px black;
  body {
    mask: linear-gradient(
      0deg,
      transparent 0px,
      black 30px,
      black 470px,
      transparent 500px
    );
  }
  overflow: scroll;
  ::-webkit-scrollbar {
    visibility: hidden;
    display: none;
  }
}

#loader {
  pointer-events: none;
  position: fixed;
  left: calc(50% - 20px);
  top: calc(50% - 20px);
  @include prefix(backdrop-filter, contrast(0.9) blur(20px) !important);
  padding: 10px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  z-index: 2;
  border: solid 1px rgb(127, 127, 127, 0.1);
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2);
  @media (prefers-color-scheme: light) {
    & {
      filter: inver();
      background: var(--accent);
      box-shadow: 0px 10px 30px var(--accent);
    }
  }
  &.shown {
    transition: 0s;
  }
  &:not(.shown) {
    transition: 1s cubic-bezier(0.075, 0.82, 0.165, 1);
    transform: scale(2);
    opacity: 0;
  }
}
iframe.pageview {
  width: 800px;
  height: 500px;
  position: fixed;
  z-index: 6;
  left: calc(50% - 400px);
  top: calc(50% - 250px);
  background: rgb(127, 127, 127, 0.1);
  border: solid 1px rgb(127, 127, 127, 0.25);
  box-shadow: 0px 5px 10px 5px rgb(0, 0, 0, 0.25),
    0px 0px 0px 1000px rgb(20, 20, 20, 0.5);
  @include prefix(backdrop-filter, 20px);

  &.shown {
    transition: 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);
    transform: scale(1);
    opacity: 1;
    @include prefix(backdrop-filter, blur(20px));
  }
  &:not(.shown) {
    transition: 0.1s ease-in-out;
    transform: scale(0.9);
    opacity: 0;
  }
}

.backdrop {
  z-index: 5;
  position: fixed;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  --sf: blur(5px);
  --hf: blur(0px);
}
select {
  border: 2px solid var(--accent);
  border-radius: 0px;
  font-size: 14px;
  padding: 3px;
}
button {
  -webkit-appearance: none;
  border: none;
  background: transparent;
  padding: 10px;
  border: 2px solid var(--accent-dark);
  margin: 5px;
  font-size: 14px;
  &.primary {
    border: 2px solid var(--accent-dark);
    background: var(--accent-dark);
    color: white;
  }
  &:active {
    opacity: 0.5;
    transform: scale(0.9);
  }
  &:not(:active) {
    transition: 0.5s;
    opacity: 1;
  }
  &.disabled {
    transition: 0s;
    filter: saturate(0);
    pointer-events: none;
  }
}

div.devicebody {
  transition: transform 0.5s var(--jump3anim);
  position: fixed;
  will-change: transform;
  left: 0px;
  top: 0px;
  width: calc(var(--width) * var(--bezelW) * 1px);
  height: calc(var(--width) * var(--bezelH) * 1px);
  &.exit {
    animation: deviceexit 0.25s forwards;
  }
  @keyframes deviceexit {
    to {
      opacity: 0;
      transform: var(--init) scale(calc(var(--scale) * 0.25));
    }
    from {
      opacity: 1;
      transform: var(--init) scale(var(--scale));
    }
  }
  &.loading {
    opacity: 1;
    .maskiframe > * {
      opacity: 0 !important;
    }
    .maskiframe {
      background-image: url(../assets/loading2.gif);
      background-position: center;
      background-size: 100px;
      background-repeat: no-repeat;
    }
  }
  &.nobutton {
    div.bridgebutton {
      display: none;
    }
  }
  div.devicenavigationbar {
    position: absolute;
    left: 0px;
    bottom: 0px;
    width: 100%;
    height: calc(100% * var(--inset1));
    background: red;
  }
  div.devicestatusbar {
    position: absolute;
    left: 0px;
    top: 0px;
    width: 100%;
    height: calc(100% * var(--inset0));
    background: red;
  }
  &.nowallpaper {
    .wallpaper,
    .livewallpaper {
      display: none;
    }
  }
  animation: deviceloaded 0.5s var(--jumpanim) forwards;
  @keyframes deviceloaded {
    from {
      opacity: 0;
      transform: var(--init) scale(calc(var(--scale) * 0.8));
    }
    to {
      opacity: 1;
      transform: var(--init) scale(var(--scale));
    }
  }
  .maskiframe {
    position: absolute;
    left: calc((var(--bezelX)) * 1px);
    top: calc(var(--bezelY) * 1px);
    left: calc(50% + (var(--bezelX)) * 1px);
    top: calc(50% + (var(--bezelY)) * 1px);
    width: calc(var(--width) * 1px);
    height: calc(var(--height) * 1px);
    transform: translateX(-50%) translateY(-50%);
    background-color: black;
    clip-path: var(--clip-path);
    overflow: hidden;
    opacity: 1;
    div.bridgebutton {
      position: absolute;
      right: 10px;
      bottom: 10px;
      width: 50px;
      height: 50px;
      background: white;
      background-image: url(/assets/bridge.svg);
      border-radius: 15px;
      box-shadow: 0px 5px 5px #00000047;
      background-size: 45%;
      background-position: center;
      background-repeat: no-repeat;
      transition: 0.5s;
      &:active {
        transition: 0s;
        filter: brightness(0.75);
      }
    }
    img.wallpaper {
      position: absolute;
      left: 0px;
      top: 0px;
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: 50%;
      z-index: -1;
    }
    div.wallpaperpicker {
      &::before {
        position: absolute;
        z-index: -1;
        content: "";
        width: 100%;
        height: 100%;
        backdrop-filter: brightness(0.75);
        animation: wallpaperpickerenter 0.2s;
      }
      &.hide::before {
        animation: wallpaperpickerleave 0.2s forwards;
      }
      position: absolute;
      left: 0%;
      top: 0%;
      height: 100%;
      width: 100%;
      z-index: 99;
      @keyframes wallpaperpickerenter {
        to {
          backdrop-filter: brightness(0.75);
        }
        from {
          backdrop-filter: brightness(1);
        }
      }
      @keyframes wallpaperpickerleave {
        from {
          backdrop-filter: brightness(0.75);
        }
        to {
          backdrop-filter: brightness(1);
        }
      }
      &.hide {
        div.wallpaperpickerpage {
          animation: wallpaperpickerpageleave 0.5s
            cubic-bezier(0.075, 0.82, 0.165, 1) forwards;
        }
      }
      div.wallpaperpickerpage {
        padding: 5px;
        position: absolute;
        left: 50%;
        top: 50%;
        width: 330px;
        max-width: calc(100% - 20px);
        height: max-content;
        transform: translateX(-50%) translateY(-50%);
        border-radius: 20px;
        animation: wallpaperpickerpageenter 0.5s
          cubic-bezier(0.075, 0.82, 0.165, 1);

        @keyframes wallpaperpickerpageenter {
          from {
            transform: translateX(-50%) translateY(-50%) scale(0.9);
          }
          to {
            transform: translateX(-50%) translateY(-50%);
          }
        }
        @keyframes wallpaperpickerpageleave {
          from {
            transform: translateX(-50%) translateY(-50%);
          }
          to {
            transform: translateX(-50%) translateY(-50%) scale(1.1);
            opacity: 0;
          }
        }
        &::before {
          left: 0px;
          top: 0px;
          position: absolute;
          z-index: -1;
          content: "";
          width: 100%;
          height: 100%;
          backdrop-filter: brightness(1.5) contrast(1.2) blur(20px) saturate(2);
          background-color: rgb(255, 255, 255, 0.3);
          border-radius: 20px;
          @media (prefers-color-scheme: dark) {
            background-color: rgb(0, 0, 0, 0.5);
          }
        }
        box-shadow: inset 0px 0px 0px 1px rgb(127, 127, 127, 0.1),
          0px 20px 50px rgba(0, 0, 0, 0.25);
        .item {
          &:active {
            transition: 0s;
            transform: scale(0.9);
            opacity: 0.5;
            backdrop-filter: contrast(2) !important;
          }
          transition: 0.5s;
          overflow: hidden;
          width: 100px;
          height: 100px;
          position: relative;
          border-radius: 10px;
          display: inline-block;
          float: left;
          margin: 5px;
          img {
            width: 100px;
            height: 100px;
            position: relative;
            pointer-events: none;
          }
          &.isv {
            backdrop-filter: contrast(1.2);
          }
          svg {
            @media (prefers-color-scheme: dark) {
              & {
                fill: rgb(255, 255, 255, 0.5);
              }
            }
            pointer-events: none;
            fill: rgb(0, 0, 0, 0.5);
            width: 60px;
            height: 60px;
            left: calc(50% - 30px);
            top: calc(50% - 30px);
            position: absolute;
          }
        }
      }
    }
    div.toastmessage {
      color: white;
      position: absolute;
      z-index: 2;
      left: 50%;
      bottom: 50px;
      transform: translateX(-50%);
      pointer-events: none;
      background: rgb(61, 61, 61, 0.9);
      padding: 10px;
      height: auto;
      box-sizing: border-box;
      border-radius: 20px;
      box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.3);
      max-width: 80%;
      text-overflow: ellipsis;
      overflow: hidden;
      opacity: 0;
      &.short {
        animation: toastshort 2s var(--jumpanim) forwards;
      }
      &.long {
        animation: toastlong 4s var(--jumpanim) forwards;
      }
    }
    @keyframes toastshort {
      0% {
        opacity: 0;
        transform: translateY(90px) translateX(-50%);
      }
      20% {
        opacity: 1;
        transform: translateY(0px) translateX(-50%);
      }
      90% {
        opacity: 1;
        transform: translateY(0px) translateX(-50%);
      }
      100% {
        opacity: 0;
        transform: translateY(90px) translateX(-50%);
      }
    }
    @keyframes toastlong {
      0% {
        opacity: 0;
        transform: translateY(90px) translateX(-50%);
      }
      10% {
        opacity: 1;
        transform: translateY(0px) translateX(-50%);
      }
      95% {
        opacity: 1;
        transform: translateY(0px) translateX(-50%);
      }
      100% {
        opacity: 0;
        transform: translateY(90px) translateX(-50%);
      }
    }
    iframe {
      position: absolute;
      left: 0px;
      top: 0px;
      width: 100%;
      height: 100%;
      opacity: 1;
    }
  }
  img {
    position: absolute;
    left: 0px;
    top: 0px;
    width: calc(var(--width) * var(--bezelW) * 1px);
    height: calc(var(--width) * var(--bezelH) * 1px);
    filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 20px 20px);
  }
}

canvas {
  &.livewallpaper {
    background: url(/assets/grid.webp);
    background-size: 10px;
    clip-path: var(--clip-path);
    .maskiframe > & {
      position: absolute;
      left: 0px !important;
      top: 0px !important;
      width: 100%;
      height: 100%;
      z-index: -2;
    }
  }
}

code ,pre{
  @include prefix(user-select, all);
  background: rgb(127, 127, 127, 0.1);
  width: max-content;
  padding: 5px;
  border: solid 2px rgb(127, 127, 127, 0.5);
}
